name: Build and test service
on: 
  pull_request:
    types: [opened, edited]
    branches: [ main, dev ]
jobs:
  build:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18' # The Go version to download (if necessary) and use.
      - run: go build ./...
  test:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    env:
      GO111MODULE: on
      SEVERITY: ${{ secrets.SEVERITY }}
      LIMIT_ISSUES: ${{ secrets.LIMIT_ISSUES }}
    permissions:
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      - name: run unit tests
        run: go test -v
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt=json -out=results.json -verbose=text ./...'
      - name: 'Evaluate gosec results'
        run: |
          cat results.json
          echo $SEVERITY
          echo $LIMIT_ISSUES
          NUMBER_ISSUES=$(cat results.json | grep severity | grep $SEVERITY | wc -l)
          echo $NUMBER_ISSUES
          if [ $NUMBER_ISSUES -gt $LIMIT_ISSUES ]; 
          then 
            echo "::error title='Severity issues found'"
            exit 1; 
          fi
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/cuemby/service-name:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/cuemby/service-name:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  