name: Deploy to Dev Kubernetes Cluster
on:
  pull_request:
    types: [ closed ]
    branches: [ dev ]
jobs:
  deploy:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    environment: dev
    env:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      CLUSTER_CONTEXT: ${{ secrets.CLUSTER_CONTEXT }}
      HARBOR_URL: ${{ secrets.HARBOR_URL }}
      HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HAS_SECRETS: ${{ secrets.HAS_SECRETS }} # BOOLEAN TO KNOW IF THE SERVICE NEEDS SECRET ENVS
      K8S_SECRETS: ${{ secrets.K8S_SECRETS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Kubeconfig 
        run: |
          mkdir ${HOME}/.kube
          echo $KUBE_CONFIG | base64 --decode > ${HOME}/.kube/config
          cat ${HOME}/.kube/config
      - name: Install tools for deployment
        uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          skaffold: '1.38.0'
      - name: Docker login Harbor
        run: docker login $HARBOR_URL -u=$HARBOR_USERNAME -p=$HARBOR_PASSWORD 
      - name: List contexts 
        run: kubectl config get-contexts
      - name: Use context
        run: kubectl config use-context $CLUSTER_CONTEXT
      - if: secrets.HAS_SECRETS
        name: Add secrets to k8s 
        run: |
          touch secret-envs.txt | echo $K8S_SECRETS | base64 --decode > ./secret-envs.txt
          cat ./secret-envs.txt
          echo "    files:" | tee -a k8s/dev/kustomization.yaml
          while IFS= read -r secret
          do
          SECRET_NAME=$(echo $secret | cut -d '=' -f 1)
          SECRET_VALUE=$(echo $secret | cut -d '=' -f 2)
          echo $SECRET_VALUE > k8s/dev/private/$SECRET_NAME.env
          printf %s $(< k8s/dev/private/$SECRET_NAME.env) > k8s/dev/private/$SECRET_NAME.env
          echo "      - $SECRET_NAME=private/$SECRET_NAME.env" | tee -a k8s/dev/kustomization.yaml
          done < secret-envs.txt
      - name: verify Kustomization
        run: cat k8s/dev/kustomization.yaml
      - name: Run skaffold
        run: skaffold run -p dev
